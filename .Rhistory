}
}
# Combine all results into a single dataframe
results_df <- bind_rows(results_list)
# Write the results to a CSV file
write_csv(results_df, output_file_path)
print(paste("Comparison results have been written to", output_file_path))
library(dplyr)
library(readr)
library(stringr)
library(purrr)
# Define the directory containing the TSV files
input_dir_events <- "E:/Individual recognition/Individual Recognition R Project/Trial_events_output"
# List all TSV files in the directory
tsv_files_events <- list.files(input_dir_events, pattern = "\\.tsv$", full.names = TRUE)
# Function to update the Observation_id column
update_observation_id <- function(file_path) {
# Read the TSV file
df_events <- read_tsv(file_path)
# Extract the file name without extension
file_name_events <- str_remove(basename(file_path), "\\.tsv$")
# Update the Observation_id column
df_events <- df_events %>%
mutate(`Observation id`= file_name_events)
# Save the modified dataframe back to the file
write_tsv(df_events, file_path)
# Print message
print(paste("Updated Observation_id in file:", file_path))
}
# Apply the function to each TSV file
walk(tsv_files_events, update_observation_id)
library(dplyr)
library(readr)
library(purrr)
# Define the path to the folder containing the TSV files
Trial_events <- "E:/Individual recognition/Individual Recognition R Project/Trial events output"
# List all .tsv files in the folder
Trial_events_files <- list.files(path = Trial_events, pattern = "\\.tsv$", full.names = TRUE)
# Read each TSV file into a dataframe and store in a list
Trial_events_a <- map(Trial_events_files, read_tsv)
# Bind all dataframes in the list into a single dataframe
Trial_events_A <- bind_rows(Trial_events_a)
# Save the combined dataframe to a TSV file
write_csv(Trial_events_A, "E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
# Print a message indicating the file has been saved (optional)
print(paste("Combined dataframe has been saved to", "Trial_events_A.csv"))
library(dplyr)
library(readr)
library(purrr)
# Define the path to the folder containing the TSV files
Trial_events <- "E:/Individual recognition/Individual Recognition R Project/Trial_events_output"
# List all .tsv files in the folder
Trial_events_files <- list.files(path = Trial_events, pattern = "\\.tsv$", full.names = TRUE)
# Read each TSV file into a dataframe and store in a list
Trial_events_a <- map(Trial_events_files, read_tsv)
# Bind all dataframes in the list into a single dataframe
Trial_events_A <- bind_rows(Trial_events_a)
# Save the combined dataframe to a TSV file
write_csv(Trial_events_A, "E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
# Print a message indicating the file has been saved (optional)
print(paste("Combined dataframe has been saved to", "Trial_events_A.csv"))
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
unique(Trial_events_A$Focal)
unique(Trial_events_A$`Observation id`)
# Check the unique values by two different categories (Focal and Call type)
unique_values <- Trial_events_A %>%
select("Focal", "Call type","Treatment") %>%
distinct()
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
unique(Trial_events_A$Focal)
unique(Trial_events_A$`Observation id`)
# Check the unique values by two different categories (Focal and Call type)
unique_values <- Trial_events_A %>%
select("Focal", "Call type","Treatment") %>%
distinct()
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
unique(Trial_events_A$Focal)
unique(Trial_events_A$`Observation id`)
unique(Trial_events_A$`Observation id`)
unique(Trial_events_A$`Call type`)
unique(Trial_events_A$`Call.type`)
unique(Trial_events_A$`Observation.id`)
unique_values <- Trial_events_A %>%
select("Focal", "Call.type","Treatment") %>%
distinct()
# Print the unique values
print(unique_values, n=218)
unique_values <- Trial_events_A %>%
select("Focal", "Call.type","Treatment") %>%
distinct()
print(unique_values)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation id",
"Observation_date" = "Observation date",
"Observation_type" = "Observation type",
"Media_duration_s"="Media duration (s)",
"Image_index" = "Image index",
"Call_type" = "Call type",
"Observation_duration"= "Observation duration",
"Closest_Diatance"="Closeset distance",
"Behavioural_Category"= "Behavioral category",
"Modifier_1"= "Modifier #1",
"Behaviour_type"="Behavior type",
"Timestamp" = "Media file name",
"Image_file_path"= "Image file path"
)
rlang::last_trace()
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration.(s)",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier.#1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration..s.",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier.#1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration.(s)",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier.#1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"='Media.duration.s',
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier.#1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
rlang::last_trace()
names(Trial_events_A)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration..s.",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier.#1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration..s.",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier..1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename(
"Timestamp" = "Media_file_name",
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id",
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration..s.",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier..1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation.id" ,
"Observation_date" = "Observation.date",
"Observation_type" = "Observation.type",
"Media_duration_s"="Media.duration..s.",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier..1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation id" ,
"Observation_date" = "Observation date",
"Observation_type" = "Observation type",
"Media_duration_s"="Media.duration..s.",
"Image_index" = "Image.index",
"Call_type" = "Call.type",
"Observation_duration"= "Observation.duration",
"Closest_Diatance"="Closeset.distance",
"Behavioural_Category"= "Behavioral.category",
"Modifier_1"= "Modifier..1",
"Behaviour_type"="Behavior.type",
"Timestamp" = "Media.file.name",
"Image_file_path"= "Image.file.path"
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= 'Observation.id' ,
"Observation_date" = 'Observation.date',
"Observation_type" = 'Observation.type',
"Media_duration_s"='Media.duration..s.',
"Image_index" = 'Image.index',
"Call_type" = 'Call.type',
"Observation_duration"= 'Observation.duration',
"Closest_Diatance"='Closeset.distance',
"Behavioural_Category"= 'Behavioral.category',
"Modifier_1"= 'Modifier..1',
"Behaviour_type"='Behavior.type',
"Timestamp" = 'Media.file.name',
"Image_file_path"= 'Image.file.path'
)
library(tidyverse)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= 'Observation id' ,
"Observation_date" = 'Observation date',
"Observation_type" = 'Observation type',
"Media_duration_s"='Media duration s',
"Image_index" = 'Image index',
"Call_type" = 'Call type',
"Observation_duration"= 'Observation duration',
"Closest_Diatance"='Closeset distance',
"Behavioural_Category"= 'Behavioral category',
"Modifier_1"= 'Modifier #1',
"Behaviour_type"='Behavior type',
"Timestamp" = 'Media file name',
"Image_file_path"= 'Image file path'
)
Trial_events_A <-Trial_events_A %>%
rename("Observation_id"= "Observation id",
"Observation_date" = "Observation date",
"Observation_type" = "Observation type",
"Media_duration_s"="Media duration (s)",
"Image_index" = "Image index",
"Call_type" = "Call type",
"Observation_duration"= "Observation duration",
"Closest_Diatance"="Closeset distance",
"Behavioural_Category"= "Behavioral category",
"Modifier_1"= "Modifier #1",
"Behaviour_type"="Behavior type",
"Timestamp" = "Media file name",
"Image_file_path"= "Image file path"
)
Trial_events_A <-Trial_events_A %>%
rename(
"Timestamp" = "Media_file_name",
)
Trial_events_A <-Trial_events_A %>%
rename(
"Timestamp" = "Media file name",
)
Trial_events_A <-Trial_events_A %>%
rename(
"Timestamp" = "Media.file.name",
)
rlang::last_trace()
library(dplyr)
library(stringr)
# Replace periods with underscores in all column names
Trial_events_A <- Trial_events_A %>%
rename_with(~ str_replace_all(., "\\.", "_"))
# View the updated column names
names(Trial_events_A)
write_csv(Trial_events_A, "E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
#Trial_events_A <-Trial_events_A %>%
rename(
"Closest_Distance" = "Closest_Diatance",
)
# remove columns (Observation_date 2, Description 3, Observation_type 5, Source 6, FPS 8, Date 11, Time 12,Position 13, Site 15, Subject 19, Image_index 25)
# add Behaviour type (state or Point event), and phase (silence beginning, interval, silence end)
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
for (i in Trial_events_A) {
}
Trial_events_B<-Trial_events_A %>%
select(-Observation_date,
-Description,
-Observation_type,
-Source,
-FPS,
-Date,
-Time,
-Position,
-Site,
-Image_index,
-Subject,
-Comment,
-...27
)
# remove columns (Observation_date 2, Description 3, Observation_type 5, Source 6, FPS 8, Date 11, Time 12,Position 13, Site 15, Subject 19, Image_index 25)
# add Behaviour type (state or Point event), and phase (silence beginning, interval, silence end)
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
for (i in Trial_events_A) {
}
Trial_events_B<-Trial_events_A %>%
select(-Observation_date,
-Description,
-Observation_type,
-Source,
-FPS,
-Date,
-Time,
-Position,
-Site,
-Image_index,
-Subject,
-Comment,
-___28
# remove columns (Observation_date 2, Description 3, Observation_type 5, Source 6, FPS 8, Date 11, Time 12,Position 13, Site 15, Subject 19, Image_index 25)
# add Behaviour type (state or Point event), and phase (silence beginning, interval, silence end)
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
for (i in Trial_events_A) {
}
Trial_events_B<-Trial_events_A %>%
select(-Observation_date,
-Description,
-Observation_type,
-Source,
-FPS,
-Date,
-Time,
-Position,
-Site,
-Image_index,
-Subject,
-Comment
)
summary(Trial_events_B)
write_csv(Trial_events_B, "E:/Individual recognition/Individual Recognition R Project/Trial_events_B.csv")
names(Trial_events_B)
summary(Trial_events_B)
# remove columns (Observation_date 2, Description 3, Observation_type 5, Source 6, FPS 8, Date 11, Time 12,Position 13, Site 15, Subject 19, Image_index 25)
# add Behaviour type (state or Point event), and phase (silence beginning, interval, silence end)
Trial_events_A <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_A.csv")
for (i in Trial_events_A) {
}
Trial_events_B<-Trial_events_A %>%
select(-Observation_date,
-Description,
-Observation_type,
-Source,
-FPS,
-Date,
-Time,
-Position,
-Site,
-Image_index,
-Subject,
-Comment,X___28
)
summary(Trial_events_B)
write_csv(Trial_events_B, "E:/Individual recognition/Individual Recognition R Project/Trial_events_B.csv")
# Load the tidyverse package
library(tidyverse)
Trial_events_B <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_B.csv")
# Separate the Observation_id into different parts based on "_" delimiter
Trial_events_C <- Trial_events_B %>%
separate(Observation_id, into = c("Focal", "Treatment", "Date", "Time"), sep = "_", remove = FALSE) %>%
mutate(
Observation_date = as.Date(Date, format = "%d%m%Y"),
Observation_start = str_replace(Time, "^(\\d{2})(\\d{2})$", "\\1:\\2")
) %>%
select(-Date, -Time)  # Optionally remove the intermediate columns
# Display the updated dataframe
print(Trial_events_C)
write_csv(Trial_events_C, "E:/Individual recognition/Individual Recognition R Project/Trial_events_C.csv")
library(tidyverse)
Trial_events_C <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_C.csv")
# Convert Timestamp to mm:ss format
Trial_events_D <- Trial_events_C %>%
mutate(
# Calculate minutes and seconds
minutes = floor(Timestamp / 60),
seconds = Timestamp %% 60,
# Format minutes and seconds as mm:ss
Timestamp_mmss = str_c(
str_pad(minutes, width = 2, pad = "0"),
":",
str_pad(floor(seconds), width = 2, pad = "0")
)
)
print(Trial_events_D)
write_csv(Trial_events_D, "E:/Individual recognition/Individual Recognition R Project/Trial_events_D.csv")
library(tidyverse)
Trial_events_C <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_C.csv")
# Function to convert seconds to mm:ss format
convert_to_mmss <- function(seconds) {
minutes <- floor(seconds / 60)
seconds <- seconds %% 60
str_c(
str_pad(minutes, width = 2, pad = "0"),
":",
str_pad(floor(seconds), width = 2, pad = "0")
)
}
# Convert Timestamp, observation_duration, and Media_duration to mm:ss format
Trial_events_E <- Trial_events_C %>%
mutate(
Timestamp_mmss = convert_to_mmss(Timestamp),
Observation_duration_mmss = convert_to_mmss(Observation_duration),
Media_duration_mmss = convert_to_mmss(Media_duration_s)
) %>%
select(-Timestamp, -Observation_duration, -Media_duration_s) %>%
rename(
Timestamp = Timestamp_mmss,
Observation_duration = Observation_duration_mmss,
Media_duration_s = Media_duration_mmss
)
print(Trial_events_E)
write_csv(Trial_events_E, "E:/Individual recognition/Individual Recognition R Project/Trial_events_E.csv")
Trial_events_E <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_E.csv")
# Load the necessary library
library(dplyr)
# Print the first few rows of the dataframe to check the contents
head(Trial_events_E)
# Ensure there are no leading/trailing spaces in the columns
Trial_events_F <- Trial_events_E %>%
mutate(
Behaviour = trimws(Behaviour),
Behaviour_type = trimws(Behaviour_type)
)
Trial_events_E <- read.csv ("E:/Individual recognition/Individual Recognition R Project/Trial_events_E.csv")
# Load the necessary library
library(dplyr)
# Print the first few rows of the dataframe to check the contents
head(Trial_events_E)
# Ensure there are no leading/trailing spaces in the columns
Trial_events_F <- Trial_events_E %>%
mutate(
Behaviour = trimws(Behaviour),
Behaviour_type = trimws(Behaviour_type)
)
# Create the Phase column based on the conditions
Trial_events_F <- Trial_events_F %>%
mutate(Phase = case_when(
Behaviour == "Hab" & Behaviour_type == "START" ~ "Habituation",
Behaviour == "Hab" & Behaviour_type == "STOP" ~ "Habituation",
Behaviour == "Dhb" & Behaviour_type == "START" ~ "Dishabituation",
Behaviour == "Dhb" & Behaviour_type == "STOP" ~ "Dishabituation",
TRUE ~ "NA"
))
# Print the first few rows to check the result
head(Trial_events_F)
write_csv(Trial_events_F, "E:/Individual recognition/Individual Recognition R Project/Trial_events_F.csv")
unique_values <- Trial_events_A %>%
select("Focal", "Call_type","Treatment") %>%
distinct()
# Print the unique values
print(unique_values)
unique(Trial_events_A$`Observation.id`)
unique(Trial_events_A$`Observation id`)
unique(Trial_events_A$`Observation_id`)
unique(Trial_events_F$`Observation.id`)
unique(Trial_events_F$`Observation_id`)
unique_values <- Trial_events_F %>%
select("Focal", "Call_type","Treatment") %>%
distinct()
# Print the unique values
print(unique_values)
```
##### saving the workspace
save.image("E:/Individual recognition/Individual Recognition R Project/Individual _Recognition_markdown_workspace_3.RData")
